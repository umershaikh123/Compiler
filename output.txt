( public , public, LineNo: 1)
( abstract , abstract, LineNo: 1)
( class , class, LineNo: 1)
( Person , ID, LineNo: 1)
( implements , implements, LineNo: 1)
( cow , ID, LineNo: 1)
( , , ,, LineNo: 1)
( cat , ID, LineNo: 1)
( { , {, LineNo: 1)
( public , public, LineNo: 2)
( string , DT, LineNo: 2)
( name , ID, LineNo: 2)
( ; , ;, LineNo: 2)
( public , public, LineNo: 3)
( int , DT, LineNo: 3)
( age , ID, LineNo: 3)
( ; , ;, LineNo: 3)
( public , public, LineNo: 6)
( Static , AM0, LineNo: 6)
( main , main, LineNo: 6)
( ( , (, LineNo: 6)
( ) , ), LineNo: 6)
( { , {, LineNo: 6)
( Person , ID, LineNo: 7)
( p , ID, LineNo: 7)
( = , =, LineNo: 7)
( new , new, LineNo: 7)
( Person , ID, LineNo: 7)
( ( , (, LineNo: 7)
( "John" , str_const, LineNo: 7)
( , , ,, LineNo: 7)
( 25 , int_const, LineNo: 7)
( ) , ), LineNo: 7)
( ; , ;, LineNo: 7)
( p , ID, LineNo: 8)
( . , ., LineNo: 8)
( greet , ID, LineNo: 8)
( ( , (, LineNo: 8)
( a , ID, LineNo: 8)
( , , ,, LineNo: 8)
( b , ID, LineNo: 8)
( ) , ), LineNo: 8)
( ; , ;, LineNo: 8)
( } , }, LineNo: 14)
( } , }, LineNo: 17)
( $ , $, Line: 18)